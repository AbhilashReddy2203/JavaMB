

Object Oriented Programming : 

It is an approach that provides a way of modularizing programming,
that which can be used to create small partition memory area for 
both data and objects, which are to be used as templates for 
creating copies of such modules on demand. 

Object : An object is a real world entity, that which possess 3 
characterstics known as 

	(i) State

	(ii) Behaviour

	(iii) Identity 

OOPS features : 
________________

	-> Encapsulation : Wrapping up of data and functions into a 
		single unit known as encapsulation. 

	-> Abtraction : Hiding the irrelevant details of an object, 
		that do not contribute to its essential characterstic
	known as abstraction. 

	*** Encapsulation focuses on showing the relevant details, 
		where abstraction focuses on hiding the 
		irrelevant details ***

	-> Inheritance : Deriving a new entity from already existsing entity known 		as inhertance, through inheritance we can reduce the size of the 		program. 

	-> Polymorphism : The ability to take more than one form known as 		polymorphism. 


	class : A class is a template or bluprint, that which contains combiation of data members and member functions.  Members of the class can be accessable by using instance of the class. 

	class class_name {
	    data members;
	    member functions;
	} 

Why Java : 
___________

	(i) Platform Independence : Write once and run anywhere. 

	(ii) Console/Windows/Web/Mobile 

	(iii) Packages : Contains group of related classes and interfaces that which belongs to one common group. If you want to overcome the naming conflicts between classes, then we need the help of packages. 

Java Features : 
________________

(i) Simple : Java uses simple C/C++ syntaxes, as a programmer no need to take care of internal details like memory management etc...as how much memory allocated to run the program, the same amount of memory will be reallocated automatically. 

(ii) Object Oriented : Java supports all object oriented programming features. 

(iii) Compiled and Interpreted : Java programs are compiled first, during compilation java code will be converted into bytecode, then .class file will be created. In Interpretation, it reads the bytecode line by line and executes. 

(iv) Portable : Ability to run the program without changing the source code, java programs are programs that can run on any env. without changing the source code. 

(v) Securable : Java implements various levels of security as 

	(i) Compiler Level

	(ii) Bytecode Level

	(iii) Class loder Level 

(vi) Distributed : By using java, we can make all distributed and robust applications. 

Java Architecture :
_____________________

	(i) Java Program : Java code that which stored with extension .java

	(ii) Java Class : Java code after compilation its converted into bytecode,
		then .class file will be created. 

	(iii) JVM (Java Virtual Machine) 

		It contains 3 components as

		  (a) Class Loder : Used to load all classes which required to run the program. There are 2 types of class loaders known as

			(i) Primordial Class Loader : Used to load all system classes which required to run the program. 

			(ii) Class Loader Objects : Used to load all user-defined classes which required to run the program. 

		  (b) JIT Compiler : Converts bytecode into CPU specific format. 

		  (c) Execution Manager : Contains QUEUE of programs which are ready to run, where we can execute the program. 

*** Before execution, program needs to undergone security authentication ***		

	 (iv) Java API : It provides runtime env. that which allows you to run the 			java program. 

Data Types : 
_____________

There are 2 types of data types as 

	(i) Value Types : int, float, double, char, boolean 

	(ii) Reference Types : String, Object and user-define data types. 

*** Value types will be stored in STACK memory and reference types will be stored in HEAP memory ***

System.out.println() :used to display any value or message. 

System -> class
out -> Console
println() -> Method. 

You can define method main() in java, as 

public static void main(String[] args) {
...
...
...
}

main() method, must be static as no class object supposed to call method main().

Access Modifiers : 
___________________

	(i) private : Allows you to access members within current class. 

	(ii) public : Allows you to access members in entire application.

	(iii) protected : Allows you to access members within current/derived 		class.

	 (iv) friendly : Allows you to access members within all classes of current 			package.

You can create an object to the class, as 

class_name obj = new class_name();

Control Structures : 
_____________________

Used to define the flow of the program. There are 2 types of control structures known as 

	(i) Branching

		if...else : Executes the statement(s) based on the condition.

		 if (condition) {		
			statement(s);
		 } else {
			statment(s);
		 }

	switch...case : Used to define menu-driven program.

	switch(choice) {
		case expr1 : 
			statement(s);
		        break;
		case expr2 : 
			statement(s);
			break;
		case expr3 :
			statement(s);
			break;
		default : 
			statement(s);
	}

	(ii) Looping 

	while loop : This loop executes all the statement(s) repeatedly until the condition remains true, if the condition remains false, then it comes out of the loop. For every loop, basically there are 3 phases known as

		(i) Initialization

		(ii) Condition

		(iii) Increment/Decrement 

	*** Initialization performed at the beginning of the loop ***

	*** Condition performed at the conditional part of the loop ***

	*** Increment/Decrement performed before closing the loop ***

	while(condition) {
		statement(s);
	}




